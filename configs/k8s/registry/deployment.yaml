# MIT License
#
# Copyright (c) 2022-2023 Carlo Corradini
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

---
apiVersion: v1
kind: Namespace
metadata:
  name: registry-system

---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: registry-secret
  namespace: registry-system
data:
  tls.crt: '${{ k8s.registry.tls.crt }}'
  tls.key: '${{ k8s.registry.tls.key }}'

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-data-pvc
  namespace: registry-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 32Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: registry-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      containers:
        - name: registry
          image: registry:2
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: '/certs/tls.crt'
            - name: REGISTRY_HTTP_TLS_KEY
              value: '/certs/tls.key'
          volumeMounts:
            - name: registry-certs
              mountPath: '/certs'
              readOnly: true
            - name: registry-data
              mountPath: '/var/lib/registry'
              subPath: registry
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: registry-certs
          secret:
            secretName: registry-secret
        - name: registry-data
          persistentVolumeClaim:
            claimName: registry-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: registry-service
  namespace: registry-system
spec:
  type: LoadBalancer
  selector:
    app: registry
  ports:
    - name: registry-port
      protocol: TCP
      port: ${{ k8s.registry.endpoint.port }}
      targetPort: 5000
  loadBalancerIP: ${{ k8s.registry.endpoint.host }}
