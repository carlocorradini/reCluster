// MIT License
//
// Copyright (c) 2022-2022 Carlo Corradini
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "node_modules/@generated/graphql"
  emitOnly = "inputs"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Node {
  id        String   @id @default(cuid())
  cpu       Cpu      @relation(fields: [cpuId], references: [id])
  cpuId     String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @db.Timestamptz()
}

model Cpu {
  id              String          @id @default(cuid())
  architecture    CpuArchitecture
  flags           String[]
  cores           Int             @db.SmallInt
  vendor          CpuVendor
  family          Int             @db.SmallInt
  model           Int             @db.SmallInt
  name            String
  cacheL1d        Int             @map("cache_l1d")
  cacheL1i        Int             @map("cache_l1i")
  cacheL2         Int             @map("cache_l2")
  cacheL3         Int             @map("cache_l3")
  vulnerabilities String[]
  createdAt       DateTime        @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt       DateTime        @updatedAt @db.Timestamptz()

  nodes Node[]

  @@unique([vendor, family, model])
}

enum CpuArchitecture {
  x86
  x86_64
}

enum CpuVendor {
  AMD
  INTEL
}
