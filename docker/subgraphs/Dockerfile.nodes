# MIT License
#
# Copyright (c) 2022-2022 Carlo Corradini
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Build image
FROM node:alpine as build

WORKDIR /app

# Copy required files
COPY package.json package-lock.json ./
COPY tsconfig.json tsconfig.common.json ./

# Copy required directories
COPY packages packages
COPY subgraphs subgraphs

# Install all dependencies
RUN npm ci
# Build
RUN npm run build
# Generate database artifacts
RUN npm run generate --workspace=packages/database

# Remove unnecessary files and directories
RUN find packages subgraphs -mindepth 2 -maxdepth 2 '!' \( -name "package.json" -type f -o -name "build" -type d \) -exec rm -rf {} +
RUN find ./ -not -path "./node_modules/*" -type f \( -name "tsconfig.json" -o -name "tsconfig.*.json" -o -name "*.js.map" -o -name "*.d.ts" -o -name "*.d.ts.map" \) -exec rm -rf {} +
RUN find subgraphs -mindepth 1 -maxdepth 1 '!' \( -name "tsconfig.json" -type f -o -name "nodes" -type d \) -exec rm -rf {} +

# Remove non-production dependencies
RUN npm prune --production --workspaces --include-workspace-root

# Final image
FROM node:alpine

LABEL org.opencontainers.image.authors="Carlo Corradini <carlo.corradini98@gmail.com>"

# Production environment
ENV NODE_ENV=production

WORKDIR /app

# Copy
COPY --from=build /app .

# Port
EXPOSE 8000

# Default executable is nodes
ENTRYPOINT [ "node", "subgraphs/nodes/build/app.js" ]
