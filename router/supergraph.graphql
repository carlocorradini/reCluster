schema
  @core(feature: "https://specs.apollo.dev/core/v0.2")
  @core(feature: "https://specs.apollo.dev/join/v0.2", for: EXECUTION) {
  query: Query
}

directive @core(
  feature: String!
  as: String
  for: core__Purpose
) repeatable on SCHEMA

directive @join__field(
  graph: join__Graph!
  requires: join__FieldSet
  provides: join__FieldSet
  type: String
  external: Boolean
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(
  graph: join__Graph!
  interface: String!
) repeatable on OBJECT | INTERFACE

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
  extension: Boolean! = false
  resolvable: Boolean! = true
) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

enum core__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

scalar join__FieldSet

enum join__Graph {
  NODES @join__graph(name: "nodes", url: "http://localhost:8000")
}

type Node @join__type(graph: NODES, key: "id") {
  id: ID!
  name: NonEmptyString!
}

"""
A string that cannot be passed as an empty value
"""
scalar NonEmptyString @join__type(graph: NODES)

type Query @join__type(graph: NODES) {
  node(id: ID!): Node
  nodes: [Node!]!
}
